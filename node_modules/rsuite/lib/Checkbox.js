'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createChainedFunction = require('./utils/createChainedFunction');

var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

var _FormControlMixin = require('./mixins/FormControlMixin.js');

var _FormControlMixin2 = _interopRequireDefault(_FormControlMixin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Checkbox = _react2.default.createClass({
    displayName: 'Checkbox',

    mixins: [_FormControlMixin2.default],
    propTypes: {
        id: _react2.default.PropTypes.string,
        name: _react2.default.PropTypes.string,
        inline: _react2.default.PropTypes.bool,
        title: _react2.default.PropTypes.string,
        disabled: _react2.default.PropTypes.bool,
        checked: _react2.default.PropTypes.bool,
        onClick: _react2.default.PropTypes.func,
        onChange: _react2.default.PropTypes.func,
        value: _react2.default.PropTypes.any
    },
    contextTypes: {
        formGroup: _react2.default.PropTypes.object
    },
    getDefaultProps: function getDefaultProps() {
        return {
            inline: false,
            disabled: false
        };
    },
    getInitialState: function getInitialState() {
        return {
            checked: this.props.checked
        };
    },
    getFormGroup: function getFormGroup() {
        return this.context.formGroup || {};
    },
    handleChange: function handleChange(event) {
        if (this.props.disabled) {
            return;
        }

        var checked = !this.state.checked;
        this.setState({
            checked: checked
        });

        var value = checked ? this.props.value : '';
        var onChange = this.props.onChange;

        var _getFormGroup = this.getFormGroup();

        var onFormGroupChange = _getFormGroup.onChange;


        onChange && onChange(value);
        onFormGroupChange && onFormGroupChange(value);
    },
    render: function render() {
        var _props = this.props;
        var type = _props.type;
        var inline = _props.inline;
        var title = _props.title;
        var name = _props.name;
        var disabled = _props.disabled;
        var className = _props.className;
        var children = _props.children;
        var onChange = _props.onChange;
        var value = _props.value;


        var classes = (0, _classnames2.default)({
            'checkbox-inline': inline
        }, className);

        var checkboxClasses = (0, _classnames2.default)({
            'checker': true,
            'disabled': disabled
        });

        var input = _react2.default.createElement(
            'span',
            { className: (0, _classnames2.default)({
                    'checked': this.state.checked
                }) },
            _react2.default.createElement('input', {
                type: 'checkbox',
                name: name,
                value: value,
                disabled: disabled,
                onChange: this.handleChange,
                defaultChecked: this.state.checked
            })
        );

        return _react2.default.createElement(
            'label',
            { className: classes },
            _react2.default.createElement(
                'div',
                {
                    className: checkboxClasses,
                    role: 'checkbox'
                },
                input
            ),
            title || children
        );
    }
});

exports.default = Checkbox;