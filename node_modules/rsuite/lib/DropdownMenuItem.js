'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _ClassNameMixin = require('./mixins/ClassNameMixin');

var _ClassNameMixin2 = _interopRequireDefault(_ClassNameMixin);

var _elementType = require('./prop-types/elementType');

var _elementType2 = _interopRequireDefault(_elementType);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var DropdownMenuItem = _react2.default.createClass({
    displayName: 'DropdownMenuItem',

    mixins: [_ClassNameMixin2.default],
    propTypes: {
        href: _react2.default.PropTypes.string,
        divider: _react2.default.PropTypes.bool,
        active: _react2.default.PropTypes.bool,
        disabled: _react2.default.PropTypes.bool,
        onSelect: _react2.default.PropTypes.func,
        onKeyDown: _react2.default.PropTypes.func,
        eventKey: _react2.default.PropTypes.any,
        componentClass: _elementType2.default
    },
    getDefaultProps: function getDefaultProps() {
        return {
            componentClass: 'a',
            active: false,
            disabled: false,
            divider: false
        };
    },
    handleClick: function handleClick(event) {
        var onSelect = this.props.onSelect;

        if (this.props.disabled) {
            event.preventDefault();
            return;
        }
        onSelect && onSelect(this.props.eventKey, this.props, event);
    },

    render: function render() {
        var _props = this.props;
        var children = _props.children;
        var divider = _props.divider;
        var onSelect = _props.onSelect;
        var onKeyDown = _props.onKeyDown;
        var Component = _props.componentClass;

        var props = _objectWithoutProperties(_props, ['children', 'divider', 'onSelect', 'onKeyDown', 'componentClass']);

        var classes = (0, _classnames2.default)({
            active: this.props.active,
            disabled: this.props.disabled
        });

        if (divider) {
            return _react2.default.createElement('li', { role: 'separator', className: 'divider' });
        }

        return _react2.default.createElement(
            'li',
            { role: 'presentation', className: classes },
            _react2.default.createElement(
                Component,
                _extends({}, props, {
                    role: 'menu-item',
                    tabIndex: '-1',
                    onClick: this.handleClick
                }),
                children
            )
        );
    }

});

exports.default = DropdownMenuItem;