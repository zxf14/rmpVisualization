'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _elementType = require('./prop-types/elementType');

var _elementType2 = _interopRequireDefault(_elementType);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function isTrivialHref(href) {
    return !href || href.trim() === '#';
}

var Anchor = _react2.default.createClass({
    displayName: 'Anchor',


    propTypes: {
        href: _react2.default.PropTypes.string,
        onClick: _react2.default.PropTypes.func,
        disabled: _react2.default.PropTypes.bool,
        role: _react2.default.PropTypes.string,
        componentClass: _elementType2.default,
        tabIndex: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.number, _react2.default.PropTypes.string])
    },
    getDefaultProps: function getDefaultProps() {
        return {
            componentClass: 'a',
            disabled: false
        };
    },
    handleClick: function handleClick(event) {
        var _props = this.props;
        var disabled = _props.disabled;
        var href = _props.href;
        var onClick = _props.onClick;

        if (disabled || isTrivialHref(href)) {
            event.preventDefault();
        }
        if (disabled) {
            event.stopPropagation();
            return;
        }
        if (onClick) {
            onClick(event);
        }
    },
    render: function render() {
        var _props2 = this.props;
        var Component = _props2.componentClass;
        var href = _props2.href;
        var role = _props2.role;
        var tabIndex = _props2.tabIndex;
        var disabled = _props2.disabled;
        var style = _props2.style;

        var props = _objectWithoutProperties(_props2, ['componentClass', 'href', 'role', 'tabIndex', 'disabled', 'style']);

        if (isTrivialHref(href)) {
            role = role || 'button';
            href = href || '';
        }

        if (disabled) {
            tabIndex = -1;
            style = _extends({ pointerEvents: 'none' }, style);
        }

        return _react2.default.createElement(Component, _extends({}, props, {
            role: role,
            href: href,
            style: style,
            tabIndex: tabIndex,
            onClick: this.handleClick
        }));
    }
});

exports.default = Anchor;