'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createChainedFunction = require('./utils/createChainedFunction');

var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var NavbarToggle = _react2.default.createClass({
    displayName: 'NavbarToggle',


    propTypes: {
        onClick: _react2.default.PropTypes.func,
        children: _react2.default.PropTypes.node
    },
    contextTypes: {
        onToggle: _react2.default.PropTypes.func,
        expanded: _react2.default.PropTypes.bool
    },

    render: function render() {
        var _props = this.props;
        var onClick = _props.onClick;
        var className = _props.className;
        var children = _props.children;

        var props = _objectWithoutProperties(_props, ['onClick', 'className', 'children']);

        var _context = this.context;
        var onToggle = _context.onToggle;
        var expanded = _context.expanded;


        var buttonProps = _extends({}, props, {
            type: 'button',
            onClick: (0, _createChainedFunction2.default)(onClick, onToggle),
            className: (0, _classnames2.default)('navbar-toggle', !expanded && 'collapsed', className)
        });

        if (children) {
            return _react2.default.createElement(
                'button',
                buttonProps,
                children
            );
        }

        return _react2.default.createElement(
            'button',
            buttonProps,
            _react2.default.createElement(
                'span',
                { className: 'sr-only' },
                'Toggle navigation'
            ),
            _react2.default.createElement('span', { className: 'icon-bar' }),
            _react2.default.createElement('span', { className: 'icon-bar' }),
            _react2.default.createElement('span', { className: 'icon-bar' })
        );
    }
});

exports.default = NavbarToggle;