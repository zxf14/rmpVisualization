'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _ClassNameMixin = require('./mixins/ClassNameMixin');

var _ClassNameMixin2 = _interopRequireDefault(_ClassNameMixin);

var _NavItem = require('./NavItem');

var _NavItem2 = _interopRequireDefault(_NavItem);

var _NavDropdown = require('./NavDropdown');

var _NavDropdown2 = _interopRequireDefault(_NavDropdown);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var Nav = _react2.default.createClass({
    displayName: 'Nav',

    mixins: [_ClassNameMixin2.default],
    propTypes: {
        tabs: _react2.default.PropTypes.bool,
        pills: _react2.default.PropTypes.bool,
        justified: _react2.default.PropTypes.bool,
        stacked: _react2.default.PropTypes.bool,
        onSelect: _react2.default.PropTypes.func,
        pullRight: _react2.default.PropTypes.bool,
        activeKey: _react2.default.PropTypes.any
    },
    contextTypes: {
        navbar: _react2.default.PropTypes.bool
    },
    getDefaultProps: function getDefaultProps() {
        return {
            classPrefix: 'nav',
            pullRight: false
        };
    },
    render: function render() {
        var _classNames;

        var _props = this.props;
        var tabs = _props.tabs;
        var pills = _props.pills;
        var stacked = _props.stacked;
        var justified = _props.justified;
        var pullRight = _props.pullRight;
        var className = _props.className;
        var children = _props.children;
        var onSelect = _props.onSelect;
        var activeKey = _props.activeKey;

        var props = _objectWithoutProperties(_props, ['tabs', 'pills', 'stacked', 'justified', 'pullRight', 'className', 'children', 'onSelect', 'activeKey']);

        var classes = (0, _classnames2.default)((_classNames = {
            'nav': true,
            'navbar-right': pullRight,
            'navbar-nav': this.context.navbar
        }, _defineProperty(_classNames, this.prefix('pills'), pills), _defineProperty(_classNames, this.prefix('tabs'), tabs), _defineProperty(_classNames, this.prefix('stacked'), stacked), _defineProperty(_classNames, this.prefix('justified'), justified), _classNames), className);

        var items = _react2.default.Children.map(children, function (item, index) {

            return _react2.default.cloneElement(item, {
                key: index,
                onSelect: onSelect,
                active: activeKey && activeKey === item.props.eventKey || item.props.active
            }, item.props.children);
        });

        return _react2.default.createElement(
            'ul',
            _extends({}, props, { className: classes }),
            items
        );
    }
});

Nav.Item = _NavItem2.default;
Nav.Dropdown = _NavDropdown2.default;

exports.default = Nav;