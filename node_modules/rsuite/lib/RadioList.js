'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Radio = require('./Radio');

var _Radio2 = _interopRequireDefault(_Radio);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RadioList = _react2.default.createClass({
    displayName: 'RadioList',


    propTypes: {
        name: _react2.default.PropTypes.string,
        inline: _react2.default.PropTypes.bool,
        onChange: _react2.default.PropTypes.func,
        value: _react2.default.PropTypes.string
    },
    contextTypes: {
        formGroup: _react2.default.PropTypes.object
    },
    handleChange: function handleChange(event) {

        if (event.target.type !== 'radio') {
            return;
        }

        var children = this.props.children;

        var target = event.target;
        var refs = this.refs;

        for (var key in refs) {
            var ref = _reactDom2.default.findDOMNode(refs[key]);
            if (target !== ref) {
                refs[key].setState({
                    checked: false
                });
            }
        }
    },
    getFormGroup: function getFormGroup() {
        return this.context.formGroup || {};
    },
    handleRadioChange: function handleRadioChange(value) {
        var onChange = this.props.onChange;

        var _getFormGroup = this.getFormGroup();

        var onFormGroupChange = _getFormGroup.onChange;


        onChange && onChange(value);
        onFormGroupChange && onFormGroupChange(value);
    },
    getValue: function getValue() {
        var _getFormGroup2 = this.getFormGroup();

        var value = _getFormGroup2.value;

        return value || this.props.value;
    },
    render: function render() {
        var _this = this;

        var _props = this.props;
        var className = _props.className;
        var inline = _props.inline;
        var name = _props.name;
        var children = _props.children;


        var clesses = (0, _classnames2.default)({
            'radio-list': true
        }, className);

        var value = this.getValue();
        var items = _react2.default.Children.map(children, function (child, index) {

            var checked = child.props.checked;

            if (value) {
                checked = value === child.props.value;
            }

            return _react2.default.cloneElement(child, {
                key: index,
                ref: 'radio_' + index,
                inline: inline,
                name: name,
                checked: checked,
                onChange: _this.handleRadioChange
            }, child.props.children);
        });

        return _react2.default.createElement(
            'div',
            {
                onClick: this.handleChange,
                className: clesses,
                role: 'radio-list'
            },
            items
        );
    }
});

exports.default = RadioList;