'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _ClassNameMixin = require('./mixins/ClassNameMixin');

var _ClassNameMixin2 = _interopRequireDefault(_ClassNameMixin);

var _InputGroupAddon = require('./InputGroupAddon');

var _InputGroupAddon2 = _interopRequireDefault(_InputGroupAddon);

var _InputGroupButton = require('./InputGroupButton');

var _InputGroupButton2 = _interopRequireDefault(_InputGroupButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var InputGroup = _react2.default.createClass({
    displayName: 'InputGroup',

    mixins: [_ClassNameMixin2.default],
    propTypes: {
        classPrefix: _react2.default.PropTypes.string,
        inside: _react2.default.PropTypes.bool
    },
    getDefaultProps: function getDefaultProps() {
        return {
            classPrefix: 'input-group'
        };
    },
    render: function render() {
        var _props = this.props;
        var className = _props.className;
        var children = _props.children;
        var classPrefix = _props.classPrefix;
        var inside = _props.inside;

        var props = _objectWithoutProperties(_props, ['className', 'children', 'classPrefix', 'inside']);

        var classes = _classnames2.default.apply(undefined, [classPrefix].concat(_toConsumableArray(this.getClassNames()), [className, _defineProperty({}, this.prefix('inside'), inside)]));

        return _react2.default.createElement(
            'span',
            _extends({}, props, { className: classes }),
            children
        );
    }
});

InputGroup.Addon = _InputGroupAddon2.default;
InputGroup.Button = _InputGroupButton2.default;

exports.default = InputGroup;