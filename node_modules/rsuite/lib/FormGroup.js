'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _FormControlMixin = require('./mixins/FormControlMixin');

var _FormControlMixin2 = _interopRequireDefault(_FormControlMixin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FormGroup = _react2.default.createClass({
    displayName: 'FormGroup',

    mixins: [_FormControlMixin2.default],
    propTypes: {
        controlId: _react2.default.PropTypes.string,
        validationState: _react2.default.PropTypes.oneOf(['success', 'warning', 'error'])
    },
    childContextTypes: {
        formGroup: _react2.default.PropTypes.object.isRequired
    },
    getChildContext: function getChildContext() {
        return {
            formGroup: _extends({}, this.props)
        };
    },
    render: function render() {
        var _props = this.props;
        var validationState = _props.validationState;
        var className = _props.className;
        var children = _props.children;
        var isValid = _props.isValid;

        var statusClass = validationState ? 'has-' + validationState : isValid === undefined ? '' : isValid ? 'has-success' : 'has-error';

        var classes = (0, _classnames2.default)('form-group', statusClass, className);
        return _react2.default.createElement(
            'div',
            { className: classes },
            children
        );
    }
});

exports.default = FormGroup;