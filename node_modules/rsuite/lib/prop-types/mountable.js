'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var _createChainableTypeChecker = require('./createChainableTypeChecker');

var _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);

var _stringFormatter = require('../utils/stringFormatter');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks whether a prop provides a DOM element
 *
 * The element can be provided in two forms:
 * - Directly passed
 * - Or passed an object that has a `render` method
 *
 * @param props
 * @param propName
 * @param componentName
 * @returns {Error|undefined}
 */

function validate(props, propName, componentName) {
    if (_typeof(props[propName]) !== 'object' || typeof props[propName].render !== 'function' && props[propName].nodeType !== 1) {

        return new Error((0, _stringFormatter.merge)('Invalid prop `{0}` of value `{1}` supplied to `{2}` , expected a DOM element or an object that has a `render` method', propName, props[propName], componentName));
    }
}

exports.default = (0, _createChainableTypeChecker2.default)(validate);