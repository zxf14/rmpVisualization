'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createChainableTypeChecker = require('./createChainableTypeChecker');

var _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);

var _stringFormatter = require('../utils/stringFormatter');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks whether a prop provides a type of element.
 *
 * The type of element can be provided in two forms:
 * - tag name (string)
 * - a return value of React.createClass(...)
 *
 * @param props
 * @param propName
 * @param componentName
 * @returns {Error|undefined}
 */

function validate(props, propName, componentName) {

    if (typeof props[propName] !== 'function') {

        var errMsg = void 0;

        if (_react2.default.isValidElement(props[propName])) {
            errMsg = 'Invalid prop `{0}` of value `{1}` supplied to `{2}`. Expected an Element `type` , not an actual Element';
        }

        if (typeof props[propName] !== 'string') {
            errMsg = 'Invalid prop `{0}` of value `{1}` supplied to `{2}`. Expected an Element `type` , such as a tag name or return value of React.createClass(...)';
        }

        if (errMsg) {
            return new Error((0, _stringFormatter.merge)(errMsg, propName, props[propName], componentName));
        }
    }
}

exports.default = (0, _createChainableTypeChecker2.default)(validate);