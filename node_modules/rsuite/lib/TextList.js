'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _FormControl = require('./FormControl');

var _FormControl2 = _interopRequireDefault(_FormControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TextList = _react2.default.createClass({
    displayName: 'TextList',

    propTypes: {
        id: _react2.default.PropTypes.string,
        value: _react2.default.PropTypes.array,
        onChange: _react2.default.PropTypes.func
    },
    contextTypes: {
        formGroup: _react2.default.PropTypes.object
    },
    getFormGroup: function getFormGroup() {
        return this.context.formGroup || {};
    },
    handleBlur: function handleBlur() {
        var onBlur = this.props.onBlur;

        var _getFormGroup = this.getFormGroup();

        var onFormGroupBlur = _getFormGroup.onBlur;

        onBlur && onBlur();
        onFormGroupBlur && onFormGroupBlur();
    },
    handleChange: function handleChange(evt) {
        var value = evt.target.value.split('\n');

        var onChange = this.props.onChange;

        var _getFormGroup2 = this.getFormGroup();

        var onFormGroupChange = _getFormGroup2.onChange;


        onChange && onChange(value);
        onFormGroupChange && onFormGroupChange(value);
    },
    getValue: function getValue() {
        var _getFormGroup3 = this.getFormGroup();

        var _getFormGroup3$value = _getFormGroup3.value;
        var value = _getFormGroup3$value === undefined ? [] : _getFormGroup3$value;

        return value || this.props.value || [];
    },
    render: function render() {
        var _getFormGroup4 = this.getFormGroup();

        var controlId = _getFormGroup4.controlId;
        var _props = this.props;
        var _props$id = _props.id;
        var id = _props$id === undefined ? controlId : _props$id;
        var className = _props.className;
        var _props$value = _props.value;
        var value = _props$value === undefined ? this.getValue() : _props$value;


        var valueStr = value.join('\n');

        var classes = (0, _classnames2.default)('form-control', className);

        return _react2.default.createElement('textarea', {
            id: id,
            value: valueStr,
            className: classes,
            onBlur: this.handleBlur,
            onChange: this.handleChange
        });
    }
});

exports.default = TextList;